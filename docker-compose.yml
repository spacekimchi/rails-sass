services:
  # PostgreSQL container
  db:
    image: postgres:16.3
    ports: 
      - "5432:5432"
    volumes:
      #- ./tmp/db:/var/lib/postgresql/data
      # This is supposed to be for defining a volume on a docker container
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    mem_limit: 500m
    networks:
      - backend

  # Redis container
  redis:
    image: redis:7.2.4
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - backend
    mem_limit: 250m

  # Sidekiq container
  sidekiq:
    build: .
    command: bundle exec sidekiq
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    env_file:
      - .env  # Assuming you have an .env file at the root that contains necessary environment variables
    environment:
      - RAILS_ENV=development
      - REDIS_URL=redis://redis:6379/0  # This makes sure the environment variable is set for Redis URL
    networks:
      - backend
    mem_limit: 500m  # Optional: specify memory limit for Sidekiq service

  # Webserver container
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/rails
    env_file:
      - ".env"
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - GUI_AVAILABLE=false
    # We are using the env_file above, so we don't need to define some environment variables directly
    # environment:
      # For DATABASE_URL, we use @db to match the name of the postgreSQL database service
      # DATABASE_URL: postgresql://railssass:password@db/myapp_development
    mem_limit: 1g
    stdin_open: true  # docker run -i; for binding.pry
    tty: true         # docker run -t; for binding.pry
    networks:
      - backend

volumes:
  redisdata: {}
  pgdata:
    external: true

# The networks limit communication between Docker containers to only the ones defined in the same network
networks:
  backend:
